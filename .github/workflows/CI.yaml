name: CI

on: push

jobs:

  nix-build:
    name: Nix default build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
      - run: nix build -L
      - run: nix build -L .#devShell.x86_64-linux

  stack-build:
    name: Stack ${{ matrix.resolver }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        resolver: [ nightly, lts-19, lts-18, lts-17, lts-16, lts-15 ]
        os: [ macos-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/setup@v1
        with:
          enable-stack: true
      - run: stack init --resolver ${{ matrix.resolver }}
      - run: stack build --resolver ${{ matrix.resolver }} --only-dependencies
      - run: stack build --resolver ${{ matrix.resolver }}
      - run: stack build --resolver ${{ matrix.resolver }} --haddock --test --bench --no-run-benchmarks

  cabal-build:
    name: Cabal with GHC ${{ matrix.ghc }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: [ '8.8.4', '8.10.7', '9.0.2', '9.2.2' ]
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cabal
            dist-newstyle
          key: cabal-cache-${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal') }}
      - run: cabal new-build --only-dependencies
      - run: cabal new-build
      - run: cabal new-test --test-show-details=direct
